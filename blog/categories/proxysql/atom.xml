<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ProxySQL | @vishnuatrai]]></title>
  <link href="http://vishnuatrai.in/blog/categories/proxysql/atom.xml" rel="self"/>
  <link href="http://vishnuatrai.in/"/>
  <updated>2020-05-03T14:48:30+05:30</updated>
  <id>http://vishnuatrai.in/</id>
  <author>
    <name><![CDATA[vishnuatrai.in]]></name>
    <email><![CDATA[vishnu.atrai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ProxySQL - MySQL High Availability Load Balancing]]></title>
    <link href="http://vishnuatrai.in/blog/2018/11/12/proxysql-mysql-high-availability-load-balancing/"/>
    <updated>2018-11-12T22:59:40+05:30</updated>
    <id>http://vishnuatrai.in/blog/2018/11/12/proxysql-mysql-high-availability-load-balancing</id>
    <content type="html"><![CDATA[<h3>What is ProxySQL?</h3>

<ul>
<li>Lightweight Proxy layer for MySQL</li>
<li>Its protocol aware that we put between application and database server</li>
<li>Improve database operations <!--more--></li>
<li>Understand and solve performance issues</li>
<li>A proxy layer to shield the database</li>
<li>Add high availability to database topology</li>
</ul>


<h3>Why ProxySQL/HAProxy?</h3>

<p>ProxySQL provides below advantages if included in deployment stack</p>

<ul>
<li>Scalability <br />
  Connection Pooling and multiplexing,  Read/Write split,  Read/Write sharding</li>
<li>High Availability <br />
  Seamless failover,  Load balancing,  Cluster aware</li>
<li>Advance query and support <br />
  Query caching,  Query rewrite,  Query blocking,  Query mirroring,  Query throttling,  Query timeout</li>
<li>Manageability <br />
  Admin Utility,  Runtime reconfiguration,  Monitoring</li>
</ul>


<h3>ProxySQL Configurations Options</h3>

<pre><code>mysql_replication_hostgroups
mysql_servers
mysql_server_connect_log
mysql_server_ping_log
mysql_server_replication_lag_log
mysql_server_read_only_log
stats_mysql_connection_pool
stats_mysql_commands_counters
mysql_query_rules
stats_mysql_query_digest
</code></pre>

<h3>Deploying with Kubernetes/Openshift &ndash; The Sidecar Pattern</h3>

<p>We can deploy the <code>proxysql</code> image in same pod as application image but data base references we will need to provide as <code>localhost</code> or <code>127.0.0.1</code> and port will be <code>6033</code> (the default proxysql port). The application will connect to proxysql server and it will then redirect database queries to mysql database cluster.</p>

<p>Openshift/kubernetes template spec &ndash;</p>

<pre><code>spec:
 template:
  spce:
   volumes:
    -
   name: "proxysql-configiguration-file"
     secret:
      secretName: "proxysql-configuration"
   containers:
    -
   name: "proxysql-service"
     image: "docker.com/proxysql/proxysql:1.0"
     ports:
      -
   containerPort: 6033
       protocal: TCP
   env:
   resources:
   volumeMounts:
    -
   name: "proxysql-configuration"
     readOnly: true
     mountPath: "/etc/prosysql-config"
</code></pre>

<h3>References</h3>

<p><a href="https://www.proxysql.com/">https://www.proxysql.com/</a></p>

<p>docker sandbox</p>

<p><a href="https://github.com/vishnuatrai/MySQLSandbox">https://github.com/vishnuatrai/MySQLSandbox</a></p>

<p>github</p>

<p><a href="https://github.com/sysown/proxysql">https://github.com/sysown/proxysql</a></p>
]]></content>
  </entry>
  
</feed>
