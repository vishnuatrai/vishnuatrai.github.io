<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby&nbsp;2.1 | @vishnuatrai]]></title>
  <link href="http://vishnuatrai.in/blog/categories/ruby-2-dot-1/atom.xml" rel="self"/>
  <link href="http://vishnuatrai.in/"/>
  <updated>2019-10-01T10:03:11+05:30</updated>
  <id>http://vishnuatrai.in/</id>
  <author>
    <name><![CDATA[vishnuatrai.in]]></name>
    <email><![CDATA[vishnu.atrai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby 2.1 Changelog]]></title>
    <link href="http://vishnuatrai.in/blog/2014/04/29/ruby-2-dot-1-changelog/"/>
    <updated>2014-04-29T12:01:04+05:30</updated>
    <id>http://vishnuatrai.in/blog/2014/04/29/ruby-2-dot-1-changelog</id>
    <content type="html"><![CDATA[<p>Ruby 2.1.0 has been released now question is, what&rsquo;s new in ruby 2.1.0. Below list of new
features introduced in ruby 2.1.0.</p>

<h3>1) def&rsquo;s return value <!--more--></h3>

<p>In earlier versions it was nil but in ruby 2.1 it will return a symbol.</p>

<pre><code>irb(main):002:0&gt; def my_method
irb(main):003:1&gt; end
=&gt; :my_method
</code></pre>

<h3>2) Rational Number and Complex Number Literals</h3>

<p>Earlier version you will have to use core classes to use relational and complex numbers,
ruby 2.1 gives r and i suffix for them. Older version will give error for these literals.</p>

<pre><code>irb(main):003:0&gt; (2+3i) + Complex(5, 4i)
=&gt; (3+3i)
</code></pre>

<h3>3) Required Keyword arguments</h3>

<p>Keyword arguments introduced by ruby 2.0 and there was no way to make them required.
In ruby 2.1 for missing keyword arguments it will raise
ArgumentError: missing keyword: keyword</p>

<pre><code>def permaliinkify(str:, delimiter: "-")
  str.downcase.split.join(delimiter)
end

irb(main):002:0&gt; permalinkify(delimiter: "-lol-")
ArgumentError: missing keyword: str
from (irb):LN
from /.rvm/2.1.0/bin/irb:11:in `&lt;main&gt;'
</code></pre>

<h3>4) Restricted Generational Garbage Collector (RGenGC)</h3>

<p>Ruby 2.1 introduced faster garbage collector RGenGC. That will make mark and sweep faster.
RGenGC design of garbage collector leverages the fact that most objects collected
by the garbage collector were the objects most recently created.</p>

<h3>5) Exception#cause</h3>

<p>Ruby 2.1 provides a way to have an exception carry a &ldquo;cause&rdquo; along with it.</p>

<pre><code>begin
  begin
    raise "Error!"
  rescue =&gt; e
    raise StandardError, "take the cause"
  end
rescue Exception =&gt; e
  puts "Caused by  : #{e.cause.message} [#{e.cause.class}]"
end
=&gt; Caused by  : Error! [RuntimeError]
</code></pre>

<h3>6) Refinements</h3>

<p>In ruby 2.1, Refinements provide an alternate way to scope our modifications in
ruby open classes or modules.</p>

<pre><code>module Permalinker
  refine String do
    def permalinkify
      downcase.split.join("-")
    end
  end
end

class Post
  using Permalinker
  def initialize(title)
    @title = title
  end
  def permalink
    @title.permalinkify
  end
end
irb(main):002:0&gt; post = Post.new("Ruby on Rails")
irb(main):002:0&gt; post.permalink
=&gt; "ruby-on-rails"
irb(main):023:0&gt; "ruby on rails".permalinkify
NoMethodError: undefined method `permalinkify' for "ruby on rails":String
</code></pre>
]]></content>
  </entry>
  
</feed>
